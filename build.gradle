plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.github.node-gradle.node' version '7.0.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

node {
    download = false
    npmVersion = ""
    nodeProjectDir = file("${project.projectDir}/src/main/frontend")
}

task npmBuild(type: NpmTask){
    //dependsOn 'npmInstallDependencies'
    execOverrides{
        it.workingDir = "src/main/frontend"
    }
    args = ['run', 'build']
}

task copyFrontendToBuild(type: Copy) {
    dependsOn 'npmBuild'
    from "$projectDir/src/main/frontend/build"
    into "$buildDir/resources/main/static"
}

processResources {
    dependsOn 'copyFrontendToBuild'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.h2database:h2' // Добавляем зависимость H2

    implementation 'org.apache.poi:poi:5.1.0'
    implementation 'org.apache.poi:poi-ooxml:5.1.0'

    implementation 'org.projectlombok:lombok:1.18.24' // Замените версию на актуальную
    annotationProcessor 'org.projectlombok:lombok:1.18.24' // Добавляем эту строчку

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
